CREATE TABLE mentors(
    id SERIAL PRIMARY KEY,
    name VARCHAR(30) NOT NULL,
    yrs_glasglow INT,
    address VARCHAR(120) NOT NULL,
    f_p_language VARCHAR(40) NOT NULL
);

INSERT INTO mentors (name, yrs_glasglow, address, f_p_language) VALUES ('Lola Bell', 6,'150 Rawlings road, Glasglow', 'Ruby');
INSERT INTO mentors (name, yrs_glasglow, address, f_p_language) VALUES ('Marcin Szczot ', 4,'15 Goldsmith road, Glasglow', 'Java');
INSERT INTO mentors (name, yrs_glasglow, address, f_p_language) VALUES ('Yusuf Farah', 3,'15 Landon road, Glasglow', 'JavaScript');
INSERT INTO mentors (name, yrs_glasglow, address, f_p_language) VALUES ('Emile Paffard-Wray', 2,'15 Brown road, Glasglow', 'Django');
INSERT INTO mentors (name, yrs_glasglow, address, f_p_language) VALUES ('Mark Farmiloe', 8,'15 Marsh road, Glasglow', 'C++');

CREATE TABLE students(
    id SERIAL PRIMARY KEY,
    name VARCHAR(30) NOT NULL,
    address VARCHAR(120) NOT NULL,
    graduated BOOLEAN NOT NULL
);

INSERT INTO students (name, address, graduated) VALUES ('Mo Yohanna','18 Prince road, London', TRUE);
INSERT INTO students (name, address, graduated) VALUES ('Cynthia Eburu','34 King Allen road, London', TRUE);
INSERT INTO students (name, address, graduated) VALUES ('Razan ko','28 Princess road, Birmingham', FALSE);
INSERT INTO students (name, address, graduated) VALUES ('Farhana Fatima Khan','88 King Georges, Glasgow', TRUE);
INSERT INTO students (name, address, graduated) VALUES ('Derlys Dominguez','20 Prince Edward road, London', FALSE);
INSERT INTO students (name, address, graduated) VALUES ('Shahd Alhaj','38 Prince Charles, Manchester', TRUE);
INSERT INTO students (name, address, graduated) VALUES ('Berhane Yohanna','43 Princess Eugene road, Birmingham',TRUE);
INSERT INTO students (name, address, graduated) VALUES ('Patrick Chan','100 Queen road, London', FALSE);
INSERT INTO students (name, address, graduated) VALUES ('Adebola Emmanuel','40 Queen Anne road, Manchester', TRUE);
INSERT INTO students (name, address, graduated) VALUES ('Jacques Vertommen','16 Prince William, London', FALSE);

CREATE TABLE classes(
    id SERIAL PRIMARY KEY,
    leading_mentor VARCHAR(45) NOT NULL,
    module VARCHAR(20) NOT NULL,
    date DATE NOT NULL,
    location VARCHAR(100) NOT NULL
);
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('John Doe', 'Nodes', '2020-09-26', 'Class');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Emile Paffard-Wray', 'HTML', '2020-04-17', 'Online');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Yusuf Farah', 'React', '2020-06-26', 'Online');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Cemil Okay', 'React', '2020-04-26', 'Online');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Paddy Sherlock', 'CSS', '2020-04-17', 'Online');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Neill B', 'Creative Coding', '2020-09-06', 'Online');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Nick Holdsworth', 'Nodes.js', '2020-04-17', 'Online');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Joy Egbe', 'HTML', '2020-04-25', 'Online');
INSERT INTO classes (leading_mentor, module, date, location) VALUES ('Nick Holdsworth', 'Nodes.js', '2020-11-14', 'University of Conventry');


question 9
CREATE TABLE react(
    id SERIAL PRIMARY KEY,
    student_id INT REFERENCES students(id),
    class_id INT REFERENCES classes(id)    
      );

      INSERT INTO react(student_id, class_id) VALUES (1,1);
      INSERT INTO react(student_id, class_id) VALUES (3,1);
      INSERT INTO react(student_id, class_id) VALUES (5,1);
      INSERT INTO react(student_id, class_id) VALUES (7,1);
      INSERT INTO react(student_id, class_id) VALUES (10,1);



 We now want to store who among the students attends a specific class. How would you store that? Come up with a solution and insert some data if you model this as a new table.


 SELECT r.id, s.name, c.leading_mentor, s.graduated, c.module FROM students s, classes c, react r WHERE s.id = r.student_id AND c.id =r.class_id;

Question 10.

SELECT * FROM mentors WHERE yrs_glasglow > 5;
SELECT * FROM mentors WHERE f_p_language ='JavaScript';
SELECT * FROM students WHERE graduated = TRUE;
SELECT * FROM classes WHERE date < '2020-06-01';
SELECT * FROM students  WHERE date < '2020-06-01';
SELECT * FROM react; 



